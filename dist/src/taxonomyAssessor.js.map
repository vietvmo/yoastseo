{"version":3,"sources":["../../src/taxonomyAssessor.js"],"names":["inherits","IntroductionKeywordAssessment","KeyphraseLengthAssessment","KeywordDensityAssessment","MetaDescriptionKeywordAssessment","TitleKeywordAssessment","taxonomyTextLengthAssessment","UrlKeywordAssessment","Assessor","MetaDescriptionLengthAssessment","TextLengthAssessment","PageTitleWidthAssessment","UrlLengthAssessment","urlStopWordsAssessment","FunctionWordsInKeyphrase","SingleH1Assessment","createAnchorOpeningTag","getTextLengthAssessment","useRecalibration","recommendedMinimum","slightlyBelowMinimum","belowMinimum","veryFarBelowMinimum","urlTitle","urlCallToAction","TaxonomyAssessor","i18n","call","type","textLengthAssessment","process","env","YOAST_RECALIBRATION","_assessments"],"mappings":"AAAA,SAASA,QAAT,QAAyB,MAAzB;;AAEA,OAAOC,6BAAP,MAA0C,iDAA1C;AACA,OAAOC,yBAAP,MAAsC,6CAAtC;AACA,OAAOC,wBAAP,MAAqC,4CAArC;AACA,OAAOC,gCAAP,MAA6C,oDAA7C;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,OAAOC,4BAAP,MAAyC,gDAAzC;AACA,OAAOC,oBAAP,MAAiC,wCAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,+BAAP,MAA4C,mDAA5C;AACA,OAAOC,oBAAP,MAAiC,wCAAjC;AACA,OAAOC,wBAAP,MAAqC,4CAArC;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AACA,OAAOC,wBAAP,MAAqC,sDAArC;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,SAASC,sBAAT,QAAuC,uBAAvC;;AAEA;;;;;;;AAOA,OAAO,MAAMC,0BAA0B,UAAUC,gBAAV,EAA6B;AACnE;AACA,KAAKA,gBAAL,EAAwB;AACvB,SAAO,IAAIR,oBAAJ,CAA0B;AAChCS,uBAAoB,GADY;AAEhCC,yBAAsB,GAFU;AAGhCC,iBAAc,GAHkB;AAIhCC,wBAAqB,EAJW;AAKhCC,aAAUP,uBAAwB,oBAAxB,CALsB;AAMhCQ,oBAAiBR,uBAAwB,oBAAxB;AANe,GAA1B,CAAP;AAQA;AACD,QAAOV,4BAAP;AACA,CAbM;;AAeP;;;;;;AAMA,MAAMmB,mBAAmB,UAAUC,IAAV,EAAiB;AACzClB,UAASmB,IAAT,CAAe,IAAf,EAAqBD,IAArB;AACA,MAAKE,IAAL,GAAY,kBAAZ;;AAEA;AACA,OAAMC,uBAAuBZ,wBAAyBa,QAAQC,GAAR,CAAYC,mBAAZ,KAAoC,SAA7D,CAA7B;;AAEA,KAAKF,QAAQC,GAAR,CAAYC,mBAAZ,KAAoC,SAAzC,EAAqD;AACpD,OAAKC,YAAL,GAAoB,CACnB,IAAIhC,6BAAJ,EADmB,EAEnB,IAAIC,yBAAJ,EAFmB,EAGnB,IAAIC,wBAAJ,EAHmB,EAInB,IAAIC,gCAAJ,EAJmB,EAKnB,IAAIK,+BAAJ,EALmB,EAMnBoB,oBANmB,EAOnB,IAAIxB,sBAAJ,EAPmB,EAQnB,IAAIM,wBAAJ,EARmB,EASnB,IAAIJ,oBAAJ,EATmB,EAUnB,IAAIO,wBAAJ,EAVmB,EAWnB,IAAIC,kBAAJ,EAXmB,CAApB;AAaA,EAdD,MAcO;AACN,OAAKkB,YAAL,GAAoB,CACnB,IAAIhC,6BAAJ,EADmB,EAEnB,IAAIC,yBAAJ,EAFmB,EAGnB,IAAIC,wBAAJ,EAHmB,EAInB,IAAIC,gCAAJ,EAJmB,EAKnB,IAAIK,+BAAJ,EALmB,EAMnBoB,oBANmB,EAOnB,IAAIxB,sBAAJ,EAPmB,EAQnB,IAAIM,wBAAJ,EARmB,EASnB,IAAIJ,oBAAJ,EATmB,EAUnB,IAAIK,mBAAJ,EAVmB,EAWnBC,sBAXmB,EAYnB,IAAIC,wBAAJ,EAZmB,CAApB;AAcA;AACD,CArCD;;AAuCAd,SAAUyB,gBAAV,EAA4BjB,QAA5B;;AAEA,eAAeiB,gBAAf","file":"taxonomyAssessor.js","sourcesContent":["import { inherits } from \"util\";\n\nimport IntroductionKeywordAssessment from \"./assessments/seo/IntroductionKeywordAssessment\";\nimport KeyphraseLengthAssessment from \"./assessments/seo/KeyphraseLengthAssessment\";\nimport KeywordDensityAssessment from \"./assessments/seo/KeywordDensityAssessment\";\nimport MetaDescriptionKeywordAssessment from \"./assessments/seo/MetaDescriptionKeywordAssessment\";\nimport TitleKeywordAssessment from \"./assessments/seo/TitleKeywordAssessment\";\nimport taxonomyTextLengthAssessment from \"./assessments/seo/taxonomyTextLengthAssessment\";\nimport UrlKeywordAssessment from \"./assessments/seo/UrlKeywordAssessment\";\nimport Assessor from \"./assessor\";\nimport MetaDescriptionLengthAssessment from \"./assessments/seo/MetaDescriptionLengthAssessment\";\nimport TextLengthAssessment from \"./assessments/seo/TextLengthAssessment\";\nimport PageTitleWidthAssessment from \"./assessments/seo/PageTitleWidthAssessment\";\nimport UrlLengthAssessment from \"./assessments/seo/UrlLengthAssessment\";\nimport urlStopWordsAssessment from \"./assessments/seo/urlStopWordsAssessment\";\nimport FunctionWordsInKeyphrase from \"./assessments/seo/FunctionWordsInKeyphraseAssessment\";\nimport SingleH1Assessment from \"./assessments/seo/SingleH1Assessment\";\nimport { createAnchorOpeningTag } from \"./helpers/shortlinker\";\n\n/**\n * Returns the text length assessment to use, based on whether recalibration has been\n * activated or not.\n *\n * @param {boolean} useRecalibration If the recalibration assessment should be used or not.\n * @returns {Object} The text length assessment to use.\n */\nexport const getTextLengthAssessment = function( useRecalibration ) {\n\t// Export so it can be used in tests.\n\tif ( useRecalibration ) {\n\t\treturn new TextLengthAssessment( {\n\t\t\trecommendedMinimum: 250,\n\t\t\tslightlyBelowMinimum: 200,\n\t\t\tbelowMinimum: 100,\n\t\t\tveryFarBelowMinimum: 50,\n\t\t\turlTitle: createAnchorOpeningTag( \"https://yoa.st/34j\" ),\n\t\t\turlCallToAction: createAnchorOpeningTag( \"https://yoa.st/34k\" ),\n\t\t} );\n\t}\n\treturn taxonomyTextLengthAssessment;\n};\n\n/**\n * Creates the Assessor used for taxonomy pages.\n *\n * @param {object} i18n The i18n object used for translations.\n * @constructor\n */\nconst TaxonomyAssessor = function( i18n ) {\n\tAssessor.call( this, i18n );\n\tthis.type = \"TaxonomyAssessor\";\n\n\t// Get the text length boundaries (they are different for recalibration).\n\tconst textLengthAssessment = getTextLengthAssessment( process.env.YOAST_RECALIBRATION === \"enabled\" );\n\n\tif ( process.env.YOAST_RECALIBRATION === \"enabled\" ) {\n\t\tthis._assessments = [\n\t\t\tnew IntroductionKeywordAssessment(),\n\t\t\tnew KeyphraseLengthAssessment(),\n\t\t\tnew KeywordDensityAssessment(),\n\t\t\tnew MetaDescriptionKeywordAssessment(),\n\t\t\tnew MetaDescriptionLengthAssessment(),\n\t\t\ttextLengthAssessment,\n\t\t\tnew TitleKeywordAssessment(),\n\t\t\tnew PageTitleWidthAssessment(),\n\t\t\tnew UrlKeywordAssessment(),\n\t\t\tnew FunctionWordsInKeyphrase(),\n\t\t\tnew SingleH1Assessment(),\n\t\t];\n\t} else {\n\t\tthis._assessments = [\n\t\t\tnew IntroductionKeywordAssessment(),\n\t\t\tnew KeyphraseLengthAssessment(),\n\t\t\tnew KeywordDensityAssessment(),\n\t\t\tnew MetaDescriptionKeywordAssessment(),\n\t\t\tnew MetaDescriptionLengthAssessment(),\n\t\t\ttextLengthAssessment,\n\t\t\tnew TitleKeywordAssessment(),\n\t\t\tnew PageTitleWidthAssessment(),\n\t\t\tnew UrlKeywordAssessment(),\n\t\t\tnew UrlLengthAssessment(),\n\t\t\turlStopWordsAssessment,\n\t\t\tnew FunctionWordsInKeyphrase(),\n\t\t];\n\t}\n};\n\ninherits( TaxonomyAssessor, Assessor );\n\nexport default TaxonomyAssessor;\n"]}