{"version":3,"sources":["../../../../src/worker/transporter/parse.js"],"names":["isArray","isObject","mapValues","AssessmentResult","Mark","Paper","Participle","Sentence","SentencePart","WordCombination","PARSE_CLASSES","parse","thing","map","thingIsObject","_parseClass","value"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;AAEA,MAAMC,gBAAgB;AACrBP,iBADqB;AAErBC,KAFqB;AAGrBC,MAHqB;AAIrBC,WAJqB;AAKrBC,SALqB;AAMrBC,aANqB;AAOrBC;AAPqB,CAAtB;;AAUA;;;;;;;AAOA,eAAe,SAASE,KAAT,CAAgBC,KAAhB,EAAwB;AACtC,KAAKZ,QAASY,KAAT,CAAL,EAAwB;AACvB,SAAOA,MAAMC,GAAN,CAAWF,KAAX,CAAP;AACA;;AAED,OAAMG,gBAAgBb,SAAUW,KAAV,CAAtB;;AAEA,KAAKE,iBAAiBF,MAAMG,WAAvB,IAAsCL,cAAeE,MAAMG,WAArB,CAA3C,EAAgF;AAC/E,SAAOL,cAAeE,MAAMG,WAArB,EAAmCJ,KAAnC,CAA0CC,KAA1C,CAAP;AACA;;AAED,KAAKE,aAAL,EAAqB;AACpB,SAAOZ,UAAWU,KAAX,EAAoBI,KAAF,IAAaL,MAAOK,KAAP,CAA/B,CAAP;AACA;;AAED,QAAOJ,KAAP;AACA","file":"parse.js","sourcesContent":["import { isArray } from \"lodash-es\";\nimport { isObject } from \"lodash-es\";\nimport { mapValues } from \"lodash-es\";\n\nimport AssessmentResult from \"../../values/AssessmentResult\";\nimport Mark from \"../../values/Mark\";\nimport Paper from \"../../values/Paper\";\nimport Participle from \"../../values/Participle\";\nimport Sentence from \"../../values/Sentence\";\nimport SentencePart from \"../../values/SentencePart\";\nimport WordCombination from \"../../values/WordCombination\";\n\nconst PARSE_CLASSES = {\n\tAssessmentResult,\n\tMark,\n\tPaper,\n\tParticiple,\n\tSentence,\n\tSentencePart,\n\tWordCombination,\n};\n\n/**\n * Parses a data structure that has previously been serialized.\n *\n * @param {*} thing The data structure to parse.\n *\n * @returns {*} The parsed data structure.\n */\nexport default function parse( thing ) {\n\tif ( isArray( thing ) ) {\n\t\treturn thing.map( parse );\n\t}\n\n\tconst thingIsObject = isObject( thing );\n\n\tif ( thingIsObject && thing._parseClass && PARSE_CLASSES[ thing._parseClass ] ) {\n\t\treturn PARSE_CLASSES[ thing._parseClass ].parse( thing );\n\t}\n\n\tif ( thingIsObject ) {\n\t\treturn mapValues( thing, ( value ) => parse( value ) );\n\t}\n\n\treturn thing;\n}\n"]}