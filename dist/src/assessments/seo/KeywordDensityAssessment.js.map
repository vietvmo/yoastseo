{"version":3,"sources":["../../../../src/assessments/seo/KeywordDensityAssessment.js"],"names":["merge","recommendedKeywordCount","Assessment","getLanguage","AssessmentResult","inRangeEndInclusive","inRangeStartEndInclusive","inRangeStartInclusive","createAnchorOpeningTag","formatNumber","keyphraseLengthFactor","countWords","KeywordDensityAssessment","constructor","config","defaultConfig","parametersRegular","noWordForms","overMaximum","maximum","minimum","multipleWordForms","parametersRecalibration","scores","wayOverMaximum","correctDensity","underMinimum","urlTitle","urlCallToAction","identifier","_config","setBoundaries","text","keyphraseLength","process","env","YOAST_RECALIBRATION","_hasMorphologicalForms","_boundaries","_minRecommendedKeywordCount","_maxRecommendedKeywordCount","getResult","paper","researcher","i18n","getData","getLocale","_keywordCount","getResearch","length","getText","assessmentResult","_keywordDensity","calculatedScore","calculateResultRecalibration","calculateResultRegular","setScore","score","setText","resultText","setHasMarks","count","hasNoMatches","hasTooFewMatches","hasGoodNumberOfMatches","hasTooManyMatches","max","maxText","roundedKeywordDensity","keywordDensityPercentage","sprintf","dgettext","dngettext","getMarks","markings","isApplicable","hasText","hasKeyword"],"mappings":"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","file":"KeywordDensityAssessment.js","sourcesContent":["import { merge } from \"lodash-es\";\n\nimport recommendedKeywordCount from \"../../assessmentHelpers/recommendedKeywordCount.js\";\nimport Assessment from \"../../assessment\";\nimport getLanguage from \"../../helpers/getLanguage\";\nimport AssessmentResult from \"../../values/AssessmentResult\";\nimport { inRangeEndInclusive, inRangeStartEndInclusive, inRangeStartInclusive } from \"../../helpers/inRange\";\nimport { createAnchorOpeningTag } from \"../../helpers/shortlinker\";\nimport formatNumber from \"../../helpers/formatNumber\";\nimport keyphraseLengthFactor from \"../../helpers/keyphraseLengthFactor.js\";\nimport countWords from \"../../stringProcessing/countWords\";\n\n/**\n * Represents the assessment that will look if the keyphrase density is within the recommended range.\n */\nclass KeywordDensityAssessment extends Assessment {\n\t/**\n\t * Sets the identifier and the config.\n\t *\n\t * @param {Object} [config] The configuration to use.\n\t * In the regular analysis, if word forms are not available\n\t * @param {number} [config.parametersRegular.noWordForms.overMaximum] The percentage of keyphrase instances in the text that\n\t * is way over the maximum.\n\t * @param {number} [config.parametersRegular.noWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRegular.noWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In the regular analysis, if word forms are available\n\t * @param {number} [config.parametersRegular.multipleWordForms.overMaximum] The percentage of keyphrase instances in the text that\n\t * is way over the maximum.\n\t * @param {number} [config.parametersRegular.multipleWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRegular.multipleWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In the recalibration analysis, if word forms are not available\n\t * @param {number} [config.parametersRecalibration.noWordForms.overMaximum] The percentage of keyphrase instances in the text that\n\t * is way over the maximum.\n\t * @param {number} [config.parametersRecalibration.noWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRecalibration.noWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In the recalibration analysis, if word forms are available\n\t * @param {number} [config.parametersRecalibration.multipleWordForms.overMaximum] The percentage of keyphrase instances in the text\n\t * that is way over the maximum.\n\t * @param {number} [config.parametersRecalibration.multipleWordForms.maximum] The maximum percentage of keyphrase instances in the text.\n\t * @param {number} [config.parametersRecalibration.multipleWordForms.minimum] The minimum percentage of keyphrase instances in the text.\n\t * In all analyses\n\t * @param {number} [config.scores.wayOverMaximum] The score to return if there are way too many instances of keyphrase in the text.\n\t * @param {number} [config.scores.overMaximum] The score to return if there are too many instances of keyphrase in the text.\n\t * @param {number} [config.scores.correctDensity] The score to return if there is a good number of keyphrase instances in the text.\n\t * @param {number} [config.scores.underMinimum] The score to return if there is not enough keyphrase instances in the text.\n\t * @param {string} [config.url] The URL to the relevant KB article.\n\t *\n\t * @returns {void}\n\t */\n\tconstructor( config = {} ) {\n\t\tsuper();\n\n\t\tconst defaultConfig = {\n\t\t\tparametersRegular: {\n\t\t\t\tnoWordForms: {\n\t\t\t\t\toverMaximum: 3.5,\n\t\t\t\t\tmaximum: 2.5,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t\tmultipleWordForms: {\n\t\t\t\t\toverMaximum: 3.5,\n\t\t\t\t\tmaximum: 3.0,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t},\n\t\t\tparametersRecalibration: {\n\t\t\t\tnoWordForms: {\n\t\t\t\t\toverMaximum: 4,\n\t\t\t\t\tmaximum: 3,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t\tmultipleWordForms: {\n\t\t\t\t\toverMaximum: 4,\n\t\t\t\t\tmaximum: 3.5,\n\t\t\t\t\tminimum: 0.5,\n\t\t\t\t},\n\t\t\t},\n\t\t\tscores: {\n\t\t\t\twayOverMaximum: -50,\n\t\t\t\toverMaximum: -10,\n\t\t\t\tcorrectDensity: 9,\n\t\t\t\tunderMinimum: 4,\n\t\t\t},\n\t\t\turlTitle: createAnchorOpeningTag( \"https://yoa.st/33v\" ),\n\t\t\turlCallToAction: createAnchorOpeningTag( \"https://yoa.st/33w\" ),\n\t\t};\n\n\t\tthis.identifier = \"keywordDensity\";\n\t\tthis._config = merge( defaultConfig, config );\n\t}\n\n\t/**\n\t * Determines correct boundaries depending on the version (Recalibration or regular) and depending on the availability\n\t * of morphological forms.\n\t *\n\t * @param {string} text The paper text.\n\t * @param {number} keyphraseLength The length of the keyphrase in words.\n\t *\n\t * @returns {void}\n\t */\n\tsetBoundaries( text, keyphraseLength ) {\n\t\tif ( process.env.YOAST_RECALIBRATION === \"enabled\" ) {\n\t\t\tif ( this._hasMorphologicalForms ) {\n\t\t\t\tthis._boundaries = this._config.parametersRecalibration.multipleWordForms;\n\t\t\t} else {\n\t\t\t\tthis._boundaries = this._config.parametersRecalibration.noWordForms;\n\t\t\t}\n\t\t\tthis._minRecommendedKeywordCount = recommendedKeywordCount( text, keyphraseLength, this._boundaries.minimum, \"min\" );\n\t\t\tthis._maxRecommendedKeywordCount = recommendedKeywordCount( text, keyphraseLength, this._boundaries.maximum, \"max\" );\n\t\t} else {\n\t\t\tif ( this._hasMorphologicalForms ) {\n\t\t\t\tthis._boundaries = this._config.parametersRegular.multipleWordForms;\n\t\t\t} else {\n\t\t\t\tthis._boundaries = this._config.parametersRegular.noWordForms;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Runs the keyphrase density module, based on this returns an assessment\n\t * result with score.\n\t *\n\t * @param {Paper} paper The paper to use for the assessment.\n\t * @param {Researcher} researcher The researcher used for calling the\n\t *                                research.\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {AssessmentResult} The result of the assessment.\n\t */\n\tgetResult( paper, researcher, i18n ) {\n\t\tthis._hasMorphologicalForms = researcher.getData( \"morphology\" ) !== false && getLanguage( paper.getLocale() ) === \"en\";\n\n\t\tthis._keywordCount = researcher.getResearch( \"keywordCount\" );\n\t\tconst keyphraseLength = this._keywordCount.length;\n\n\t\tthis.setBoundaries( paper.getText(), keyphraseLength );\n\n\t\tconst assessmentResult = new AssessmentResult();\n\n\t\tthis._keywordDensity = researcher.getResearch( \"getKeywordDensity\" );\n\n\t\tlet calculatedScore = {};\n\n\t\t// Calculate score depending on the version (Recalibration or regular).\n\t\tif ( process.env.YOAST_RECALIBRATION === \"enabled\" ) {\n\t\t\tthis._keywordDensity = this._keywordDensity * keyphraseLengthFactor( keyphraseLength );\n\t\t\tcalculatedScore = this.calculateResultRecalibration( i18n );\n\t\t} else {\n\t\t\tcalculatedScore = this.calculateResultRegular( i18n );\n\t\t}\n\n\t\tassessmentResult.setScore( calculatedScore.score );\n\t\tassessmentResult.setText( calculatedScore.resultText );\n\t\tassessmentResult.setHasMarks( this._keywordCount.count > 0 );\n\n\t\treturn assessmentResult;\n\t}\n\n\t/**\n\t * Checks whether there are no keyphrase matches in the text.\n\t *\n\t * @returns {boolean} Returns true if the keyphrase count is 0.\n\t */\n\thasNoMatches() {\n\t\treturn this._keywordCount.count === 0;\n\t}\n\n\t/**\n\t * Checks whether there are too few keyphrase matches in the text.\n\t *\n\t * @returns {boolean} Returns true if the rounded keyword density is between 0 and the recommended minimum\n\t * or if there there is only 1 keyword match (regardless of the density).\n\t */\n\thasTooFewMatches() {\n\t\treturn inRangeStartInclusive(\n\t\t\tthis._keywordDensity,\n\t\t\t0,\n\t\t\tthis._boundaries.minimum,\n\t\t) || this._keywordCount.count === 1;\n\t}\n\n\t/**\n\t * Checks whether there is a good number of keyphrase matches in the text.\n\t *\n\t * @returns {boolean} Returns true if the rounded keyword density is between the recommended minimum\n\t * and the recommended maximum or if the keyword count is 2 and the recommended minimum is lower than 2.\n\t */\n\thasGoodNumberOfMatches() {\n\t\treturn inRangeStartEndInclusive(\n\t\t\tthis._keywordDensity,\n\t\t\tthis._boundaries.minimum,\n\t\t\tthis._boundaries.maximum\n\t\t) || ( this._keywordCount.count === 2 && this._minRecommendedKeywordCount <= 2 );\n\t}\n\n\t/**\n\t * Checks whether the number of keyphrase matches in the text is between the\n\t * recommended maximum and the specified overMaximum value.\n\t *\n\t * @returns {boolean} Returns true if the rounded keyphrase density is between\n\t *                    the recommended maximum and the specified overMaximum\n\t *                    value.\n\t */\n\thasTooManyMatches() {\n\t\treturn inRangeEndInclusive(\n\t\t\tthis._keywordDensity,\n\t\t\tthis._boundaries.maximum,\n\t\t\tthis._boundaries.overMaximum\n\t\t);\n\t}\n\n\t/**\n\t * Returns the score for the keyphrase density (for Regular analysis).\n\t *\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {Object} The object with calculated score and resultText.\n\t */\n\tcalculateResultRegular( i18n ) {\n\t\tconst max = this._boundaries.maximum;\n\t\tconst maxText = `${ max }%`;\n\t\tconst roundedKeywordDensity = formatNumber( this._keywordDensity );\n\t\tconst keywordDensityPercentage = roundedKeywordDensity + \"%\";\n\n\t\tif ( this.hasNoMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t\t%3$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%5$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%3$sKeyphrase density%5$s: %1$s. \" +\n\t\t\t\t\t\t\"This is too low; the keyphrase was found %2$d times. %4$sFocus on your keyphrase%5$s!\",\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._keywordCount.count,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooFewMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t\t%3$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%5$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%3$sKeyphrase density%5$s: %1$s. \" +\n\t\t\t\t\t\t\"This is too low; the keyphrase was found %2$d time. %4$sFocus on your keyphrase%5$s!\",\n\t\t\t\t\t\t\"%3$sKeyphrase density%5$s: %1$s. \" +\n\t\t\t\t\t\t\"This is too low; the keyphrase was found %2$d times. %4$sFocus on your keyphrase%5$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._keywordCount.count,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasGoodNumberOfMatches()  ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.correctDensity,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$s expands to a link to Yoast.com,\n\t\t\t\t\t%3$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%2$sKeyphrase density%3$s: %1$s. \" +\n\t\t\t\t\t\t\"This is great!\",\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooManyMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.overMaximum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t\t%3$s expands to the maximum keyphrase density percentage,\n\t\t\t\t\t%4$s and %5$s expand to links to Yoast.com,\n\t\t\t\t\t%6$s expands to the anchor end tag. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\t\"This is over the advised %3$s maximum; the keyphrase was found %2$d time. \" +\n\t\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\t\"This is over the advised %3$s maximum; the keyphrase was found %2$d times. \" +\n\t\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tkeywordDensityPercentage,\n\t\t\t\t\tthis._keywordCount.count,\n\t\t\t\t\tmaxText,\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\t\"</a>\"\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\t// Implicitly returns this if the rounded keyphrase density is higher than overMaximum.\n\t\treturn {\n\t\t\tscore: this._config.scores.wayOverMaximum,\n\t\t\tresultText: i18n.sprintf(\n\t\t\t\t/* Translators:\n\t\t\t\t%1$s expands to the keyphrase density percentage,\n\t\t\t\t%2$d expands to the keyphrase count,\n\t\t\t\t%3$s expands to the maximum keyphrase density percentage,\n\t\t\t\t%4$s and %5$s expand to links to Yoast.com,\n\t\t\t\t%6$s expands to the anchor end tag. */\n\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\"This is way over the advised %3$s maximum; the keyphrase was found %2$d time. \" +\n\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\t\"%4$sKeyphrase density%6$s: %1$s. \" +\n\t\t\t\t\t\"This is way over the advised %3$s maximum; the keyphrase was found %2$d times. \" +\n\t\t\t\t\t\"%5$sDon't overoptimize%6$s!\",\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t\tkeywordDensityPercentage,\n\t\t\t\tthis._keywordCount.count,\n\t\t\t\tmaxText,\n\t\t\t\tthis._config.urlTitle,\n\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\"</a>\"\n\t\t\t),\n\t\t};\n\t}\n\n\t/**\n\t * Returns the score for the keyphrase density (for Recalibration).\n\t *\n\t * @param {Jed} i18n The object used for translations.\n\t *\n\t * @returns {Object} The object with calculated score and resultText.\n\t */\n\tcalculateResultRecalibration( i18n ) {\n\t\tif ( this.hasNoMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the recommended minimal number of times the keyphrase should occur in the text. */\n\t\t\t\t\ti18n.dgettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found 0 times. \" +\n\t\t\t\t\t\t\"That's less than the recommended minimum of %3$d times for a text of this length. \" +\n\t\t\t\t\t\t\"%4$sFocus on your keyphrase%2$s!\",\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._minRecommendedKeywordCount,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooFewMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.underMinimum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the recommended minimal number of times the keyphrase should occur in the text,\n\t\t\t\t\t%5$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's less than the \" +\n\t\t\t\t\t\t\"recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's less than the \" +\n\t\t\t\t\t\t\"recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._minRecommendedKeywordCount,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasGoodNumberOfMatches()  ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.correctDensity,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s expands to a link to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %3$d time. This is great!\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %3$d times. This is great!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif ( this.hasTooManyMatches() ) {\n\t\t\treturn {\n\t\t\t\tscore: this._config.scores.overMaximum,\n\t\t\t\tresultText: i18n.sprintf(\n\t\t\t\t\t/* Translators:\n\t\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t\t%3$d expands to the recommended maximal number of times the keyphrase should occur in the text,\n\t\t\t\t\t%5$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's more than the \" +\n\t\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's more than the \" +\n\t\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t\t),\n\t\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\t\"</a>\",\n\t\t\t\t\tthis._maxRecommendedKeywordCount,\n\t\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\t// Implicitly returns this if the rounded keyphrase density is higher than overMaximum.\n\t\treturn {\n\t\t\tscore: this._config.scores.wayOverMaximum,\n\t\t\tresultText: i18n.sprintf(\n\t\t\t\t/* Translators:\n\t\t\t\t%1$s and %4$s expand to links to Yoast.com,\n\t\t\t\t%2$s expands to the anchor end tag,\n\t\t\t\t%3$d expands to the recommended maximal number of times the keyphrase should occur in the text,\n\t\t\t\t%5$d expands to the number of times the keyphrase occurred in the text. */\n\t\t\t\ti18n.dngettext(\n\t\t\t\t\t\"js-text-analysis\",\n\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's way more than the \" +\n\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\t\"%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's way more than the \" +\n\t\t\t\t\t\"recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!\",\n\t\t\t\t\tthis._keywordCount.count\n\t\t\t\t),\n\t\t\t\tthis._config.urlTitle,\n\t\t\t\t\"</a>\",\n\t\t\t\tthis._maxRecommendedKeywordCount,\n\t\t\t\tthis._config.urlCallToAction,\n\t\t\t\tthis._keywordCount.count\n\t\t\t),\n\t\t};\n\t}\n\n\n\t/**\n\t * Marks keywords in the text for the keyword density assessment.\n\t *\n\t * @returns {Array<Mark>} Marks that should be applied.\n\t */\n\tgetMarks() {\n\t\treturn this._keywordCount.markings;\n\t}\n\n\n\t/**\n\t * Checks whether the paper has a text with at least 100 words and a keyword\n\t * is set.\n\t *\n\t * @param {Paper} paper The paper to use for the assessment.\n\t *\n\t * @returns {boolean} True if applicable.\n\t */\n\tisApplicable( paper ) {\n\t\treturn paper.hasText() && paper.hasKeyword() && countWords( paper.getText() ) >= 100;\n\t}\n}\n\nexport default KeywordDensityAssessment;\n"]}