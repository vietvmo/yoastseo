{"version":3,"sources":["../../../src/researches/stopWordsInText.js"],"names":["stopwordsFactory","stopwords","toRegex","text","i","matches","length","match","push"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,wBAA7B;AACA,MAAMC,YAAYD,kBAAlB;AACA,OAAOE,OAAP,MAAoB,wCAApB;;AAEA;;;;;;AAMA,eAAe,UAAUC,IAAV,EAAiB;AAC/B,KAAIC,CAAJ;AAAA,KAAOC,UAAU,EAAjB;;AAEA,MAAMD,IAAI,CAAV,EAAaA,IAAIH,UAAUK,MAA3B,EAAmCF,GAAnC,EAAyC;AACxC,MAAKD,KAAKI,KAAL,CAAYL,QAASD,UAAWG,CAAX,CAAT,CAAZ,MAA4C,IAAjD,EAAwD;AACvDC,WAAQG,IAAR,CAAcP,UAAWG,CAAX,CAAd;AACA;AACD;;AAED,QAAOC,OAAP;AACA","file":"stopWordsInText.js","sourcesContent":["import stopwordsFactory from \"../config/stopwords.js\";\nconst stopwords = stopwordsFactory();\nimport toRegex from \"../stringProcessing/createWordRegex.js\";\n\n/**\n * Checks a text to see if there are any stopwords, that are defined in the stopwords config.\n *\n * @param {string} text The input text to match stopwords.\n * @returns {Array} An array with all stopwords found in the text.\n */\nexport default function( text ) {\n\tvar i, matches = [];\n\n\tfor ( i = 0; i < stopwords.length; i++ ) {\n\t\tif ( text.match( toRegex( stopwords[ i ] ) ) !== null ) {\n\t\t\tmatches.push( stopwords[ i ] );\n\t\t}\n\t}\n\n\treturn matches;\n}\n"]}