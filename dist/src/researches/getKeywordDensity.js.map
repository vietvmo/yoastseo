{"version":3,"sources":["../../../src/researches/getKeywordDensity.js"],"names":["countWords","paper","researcher","wordCount","getText","keywordCount","getResearch","count"],"mappings":"AAAA;;AAEA,OAAOA,UAAP,MAAuB,mCAAvB;;AAEA;;;;;;;AAOA,eAAe,UAAUC,KAAV,EAAiBC,UAAjB,EAA8B;AAC5C,QAAMC,YAAYH,WAAYC,MAAMG,OAAN,EAAZ,CAAlB;AACA,MAAKD,cAAc,CAAnB,EAAuB;AACtB,WAAO,CAAP;AACA;;AAED,QAAME,eAAeH,WAAWI,WAAX,CAAwB,cAAxB,CAArB;AACA,SAASD,aAAaE,KAAb,GAAqBJ,SAAvB,GAAqC,GAA5C;AACA","file":"getKeywordDensity.js","sourcesContent":["/** @module analyses/getKeywordDensity */\n\nimport countWords from \"../stringProcessing/countWords.js\";\n\n/**\n * Calculates the keyword density .\n *\n * @param {object} paper The paper containing keyword and text.\n * @param {object} researcher The researcher.\n * @returns {number} The keyword density.\n */\nexport default function( paper, researcher ) {\n\tconst wordCount = countWords( paper.getText() );\n\tif ( wordCount === 0 ) {\n\t\treturn 0;\n\t}\n\n\tconst keywordCount = researcher.getResearch( \"keywordCount\" );\n\treturn ( keywordCount.count / wordCount ) * 100;\n}\n"]}