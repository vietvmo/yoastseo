{"version":3,"sources":["../../../src/researches/getWordComplexity.js"],"names":["getWords","countSyllables","getSentences","map","forEach","getWordComplexityForSentence","sentence","words","results","word","i","push","wordIndex","complexity","paper","sentences","getText"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iCAArB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA;;;;;AAKA,IAAIC,+BAA+B,UAAUC,QAAV,EAAqB;AACvD,KAAIC,QAAQP,SAAUM,QAAV,CAAZ;AACA,KAAIE,UAAU,EAAd;;AAEAJ,SAASG,KAAT,EAAgB,UAAUE,IAAV,EAAgBC,CAAhB,EAAoB;AACnCF,UAAQG,IAAR,CAAc;AACbF,SAAMA,IADO;AAEbG,cAAWF,CAFE;AAGbG,eAAYZ,eAAgBQ,IAAhB;AAHC,GAAd;AAKA,EAND;;AAQA,QAAOD,OAAP;AACA,CAbD;;AAeA;;;;;AAKA,eAAe,UAAUM,KAAV,EAAkB;AAChC,KAAIC,YAAYb,aAAcY,MAAME,OAAN,EAAd,CAAhB;;AAEA,QAAOb,IAAKY,SAAL,EAAgB,UAAUT,QAAV,EAAqB;AAC3C,SAAO;AACNA,aAAUA,QADJ;AAENC,UAAOF,6BAA8BC,QAA9B;AAFD,GAAP;AAIA,EALM,CAAP;AAMA","file":"getWordComplexity.js","sourcesContent":["import getWords from \"../stringProcessing/getWords.js\";\nimport countSyllables from \"../stringProcessing/syllables/count.js\";\nimport getSentences from \"../stringProcessing/getSentences.js\";\n\nimport { map } from \"lodash-es\";\nimport { forEach } from \"lodash-es\";\n\n/**\n * Gets the complexity per word, along with the index for the sentence.\n * @param {string} sentence The sentence to get wordComplexity from.\n * @returns {Array} A list with words, the index and the complexity per word.\n */\nvar getWordComplexityForSentence = function( sentence ) {\n\tvar words = getWords( sentence );\n\tvar results = [];\n\n\tforEach( words, function( word, i ) {\n\t\tresults.push( {\n\t\t\tword: word,\n\t\t\twordIndex: i,\n\t\t\tcomplexity: countSyllables( word ),\n\t\t} );\n\t} );\n\n\treturn results;\n};\n\n/**\n * Calculates the complexity of words in a text, returns each words with their complexity.\n * @param {Paper} paper The Paper object to get the text from.\n * @returns {Object} The words found in the text with the number of syllables.\n */\nexport default function( paper ) {\n\tvar sentences = getSentences( paper.getText() );\n\n\treturn map( sentences, function( sentence ) {\n\t\treturn {\n\t\t\tsentence: sentence,\n\t\t\twords: getWordComplexityForSentence( sentence ),\n\t\t};\n\t} );\n}\n\n"]}