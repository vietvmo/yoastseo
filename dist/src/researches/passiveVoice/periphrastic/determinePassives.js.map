{"version":3,"sources":["../../../../../src/researches/passiveVoice/periphrastic/determinePassives.js"],"names":["getParticiples","determineSentencePartIsPassive","sentencePart","auxiliaries","language","participles"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AACA,OAAOC,8BAAP,MAA2C,qCAA3C;;AAEA;;;;;;;;AAQA,eAAe,UAAUC,YAAV,EAAwBC,WAAxB,EAAqCC,QAArC,EAAgD;AAC9D,QAAMC,cAAcL,eAAgBE,YAAhB,EAA8BC,WAA9B,EAA2CC,QAA3C,CAApB;AACA,SAAOH,+BAAgCI,WAAhC,CAAP;AACA","file":"determinePassives.js","sourcesContent":["import getParticiples from \"./getParticiples.js\";\nimport determineSentencePartIsPassive from \"./determineSentencePartIsPassive.js\";\n\n/**\n * Determines whether a sentence part is passive.\n *\n * @param {string} sentencePart The sentence part to determine voice for.\n * @param {Array} auxiliaries The auxiliaries to be used for creating SentenceParts.\n * @param {string} language The language to determine voice for.\n * @returns {boolean} Returns true if passive, otherwise returns false.\n */\nexport default function( sentencePart, auxiliaries, language ) {\n\tconst participles = getParticiples( sentencePart, auxiliaries, language );\n\treturn determineSentencePartIsPassive( participles );\n}\n"]}