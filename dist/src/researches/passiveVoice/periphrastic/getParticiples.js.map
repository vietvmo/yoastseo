{"version":3,"sources":["../../../../../src/researches/passiveVoice/periphrastic/getParticiples.js"],"names":["forEach","getWords","matchParticiplesFactory","matchParticiples","regularParticipleRegex","regularParticiples","irregularParticipleRegex","irregularParticiples","EnglishParticiple","FrenchParticiple","SpanishParticiple","ItalianParticiple","DutchParticiple","PolishParticiple","sentencePartText","auxiliaries","language","words","foundParticiples","word","type","length","push"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;;AAEA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,uBAAP,MAAoC,oBAApC;AACA,MAAMC,mBAAmBD,yBAAzB;AACA,MAAME,yBAAyBD,iBAAiBE,kBAAhD;AACA,MAAMC,2BAA2BH,iBAAiBI,oBAAlD;;AAEA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;;AAEA;;;;;;;;AAQA,eAAe,UAAUC,gBAAV,EAA4BC,WAA5B,EAAyCC,QAAzC,EAAoD;AAClE,OAAMC,QAAQhB,SAAUa,gBAAV,CAAd;AACA,OAAMI,mBAAmB,EAAzB;;AAEAlB,SAASiB,KAAT,EAAgB,UAAUE,IAAV,EAAiB;AAChC,MAAIC,OAAO,EAAX;AACA,MAAKhB,uBAAwBe,IAAxB,EAA8BH,QAA9B,EAAyCK,MAAzC,KAAoD,CAAzD,EAA6D;AAC5DD,UAAO,SAAP;AACA;AACD,MAAKd,yBAA0Ba,IAA1B,EAAgCH,QAAhC,EAA2CK,MAA3C,KAAsD,CAA3D,EAA+D;AAC9DD,UAAO,WAAP;AACA;AACD,MAAKA,SAAS,EAAd,EAAmB;AAClB,WAASJ,QAAT;AACC,SAAK,IAAL;AACCE,sBAAiBI,IAAjB,CAAuB,IAAIb,gBAAJ,CAAsBU,IAAtB,EAA4BL,gBAA5B,EACtB,EAAEC,aAAaA,WAAf,EAA4BK,MAAMA,IAAlC,EAAwCJ,UAAUA,QAAlD,EADsB,CAAvB;AAEA;AACD,SAAK,IAAL;AACCE,sBAAiBI,IAAjB,CAAuB,IAAIZ,iBAAJ,CAAuBS,IAAvB,EAA6BL,gBAA7B,EACtB,EAAEC,aAAaA,WAAf,EAA4BK,MAAMA,IAAlC,EAAwCJ,UAAUA,QAAlD,EADsB,CAAvB;AAEA;AACD,SAAK,IAAL;AACCE,sBAAiBI,IAAjB,CAAuB,IAAIX,iBAAJ,CAAuBQ,IAAvB,EAA6BL,gBAA7B,EACtB,EAAEC,aAAaA,WAAf,EAA4BK,MAAMA,IAAlC,EAAwCJ,UAAUA,QAAlD,EADsB,CAAvB;AAEA;AACD,SAAK,IAAL;AACCE,sBAAiBI,IAAjB,CAAuB,IAAIV,eAAJ,CAAqBO,IAArB,EAA2BL,gBAA3B,EACtB,EAAEC,aAAaA,WAAf,EAA4BK,MAAMA,IAAlC,EAAwCJ,UAAUA,QAAlD,EADsB,CAAvB;AAEA;AACD,SAAK,IAAL;AACCE,sBAAiBI,IAAjB,CAAuB,IAAIT,gBAAJ,CAAsBM,IAAtB,EAA4BL,gBAA5B,EACtB,EAAEC,aAAaA,WAAf,EAA4BK,MAAMA,IAAlC,EAAwCJ,UAAUA,QAAlD,EADsB,CAAvB;AAEA;AACD,SAAK,IAAL;AACA;AACCE,sBAAiBI,IAAjB,CAAuB,IAAId,iBAAJ,CAAuBW,IAAvB,EAA6BL,gBAA7B,EACtB,EAAEC,aAAaA,WAAf,EAA4BK,MAAMA,IAAlC,EAAwCJ,UAAUA,QAAlD,EADsB,CAAvB;AAEA;AAzBF;AA2BA;AACD,EArCD;AAsCA,QAAOE,gBAAP;AACA","file":"getParticiples.js","sourcesContent":["import { forEach } from \"lodash-es\";\n\nimport getWords from \"../../../stringProcessing/getWords.js\";\nimport matchParticiplesFactory from \"./matchParticiples\";\nconst matchParticiples = matchParticiplesFactory();\nconst regularParticipleRegex = matchParticiples.regularParticiples;\nconst irregularParticipleRegex = matchParticiples.irregularParticiples;\n\nimport EnglishParticiple from \"../../english/passiveVoice/EnglishParticiple.js\";\nimport FrenchParticiple from \"../../french/passiveVoice/FrenchParticiple.js\";\nimport SpanishParticiple from \"../../spanish/passiveVoice/SpanishParticiple.js\";\nimport ItalianParticiple from \"../../italian/passiveVoice/ItalianParticiple.js\";\nimport DutchParticiple from \"../../dutch/passiveVoice/DutchParticiple.js\";\nimport PolishParticiple from \"../../polish/passiveVoice/PolishParticiple.js\";\n\n/**\n * Creates participle objects for the participles found in a sentence part.\n *\n * @param {string} sentencePartText The sentence part to find participles in.\n * @param {Array} auxiliaries The list of auxiliaries from the sentence part.\n * @param {string} language The language to find the participles for.\n * @returns {Array} The list with participle objects.\n */\nexport default function( sentencePartText, auxiliaries, language ) {\n\tconst words = getWords( sentencePartText );\n\tconst foundParticiples = [];\n\n\tforEach( words, function( word ) {\n\t\tlet type = \"\";\n\t\tif ( regularParticipleRegex( word, language ).length !== 0 ) {\n\t\t\ttype = \"regular\";\n\t\t}\n\t\tif ( irregularParticipleRegex( word, language ).length !== 0 ) {\n\t\t\ttype = \"irregular\";\n\t\t}\n\t\tif ( type !== \"\" ) {\n\t\t\tswitch ( language ) {\n\t\t\t\tcase \"fr\":\n\t\t\t\t\tfoundParticiples.push( new FrenchParticiple( word, sentencePartText,\n\t\t\t\t\t\t{ auxiliaries: auxiliaries, type: type, language: language } ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"es\":\n\t\t\t\t\tfoundParticiples.push( new SpanishParticiple( word, sentencePartText,\n\t\t\t\t\t\t{ auxiliaries: auxiliaries, type: type, language: language } ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"it\":\n\t\t\t\t\tfoundParticiples.push( new ItalianParticiple( word, sentencePartText,\n\t\t\t\t\t\t{ auxiliaries: auxiliaries, type: type, language: language } ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"nl\":\n\t\t\t\t\tfoundParticiples.push( new DutchParticiple( word, sentencePartText,\n\t\t\t\t\t\t{ auxiliaries: auxiliaries, type: type, language: language } ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pl\":\n\t\t\t\t\tfoundParticiples.push( new PolishParticiple( word, sentencePartText,\n\t\t\t\t\t\t{ auxiliaries: auxiliaries, type: type, language: language } ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"en\":\n\t\t\t\tdefault:\n\t\t\t\t\tfoundParticiples.push( new EnglishParticiple( word, sentencePartText,\n\t\t\t\t\t\t{ auxiliaries: auxiliaries, type: type, language: language } ) );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} );\n\treturn foundParticiples;\n}\n"]}