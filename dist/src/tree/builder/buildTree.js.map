{"version":3,"sources":["../../../../src/tree/builder/buildTree.js"],"names":["parseFragment","TreeAdapter","cleanUpTree","buildTree","html","treeAdapter","tree","sourceCodeLocationInfo"],"mappings":"AAAA,SAASA,aAAT,QAA8B,QAA9B;;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA;;;;;;;;;AASA,MAAMC,YAAY,UAAUC,IAAV,EAAiB;AAClC,OAAMC,cAAc,IAAIJ,WAAJ,EAApB;AACA;;;;AAIA,KAAIK,OAAON,cAAeI,IAAf,EAAqB,EAAEC,aAAaA,WAAf,EAA4BE,wBAAwB,IAApD,EAArB,CAAX;AACA;AACAD,QAAOJ,YAAaI,IAAb,EAAmBF,IAAnB,CAAP;AACA,QAAOE,IAAP;AACA,CAVD;;AAYA,eAAeH,SAAf","file":"buildTree.js","sourcesContent":["import { parseFragment } from \"parse5\";\n\nimport TreeAdapter from \"./TreeAdapter\";\nimport cleanUpTree from \"./cleanup/postParsing\";\n\n/**\n * Parses the given html-string to a tree, to be used in further analysis.\n *\n * @param {string} html The html-string that should be parsed.\n *\n * @returns {module:tree/structure.Node} The build tree.\n *\n * @memberOf module:tree/builder\n */\nconst buildTree = function( html ) {\n\tconst treeAdapter = new TreeAdapter();\n\t/*\n\t  Parsing of a HTML article takes on average 19ms\n\t  (based on the fullTexts in the specs (n=24), measured using `console.time`).\n\t */\n\tlet tree = parseFragment( html, { treeAdapter: treeAdapter, sourceCodeLocationInfo: true } );\n\t// Cleanup takes < 2ms.\n\ttree = cleanUpTree( tree, html );\n\treturn tree;\n};\n\nexport default buildTree;\n"]}