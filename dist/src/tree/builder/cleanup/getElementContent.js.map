{"version":3,"sources":["../../../../../src/tree/builder/cleanup/getElementContent.js"],"names":["getElementContent","element","html","location","start","startTag","endOffset","startOffset","end","endTag","slice"],"mappings":"AAAA;;;;;;;;;;AAUA,MAAMA,oBAAoB,UAAUC,OAAV,EAAmBC,IAAnB,EAA0B;AACnD,QAAMC,WAAWF,QAAQE,QAAzB;AACA,MAAKA,QAAL,EAAgB;AACf,UAAMC,QAAQD,SAASE,QAAT,GAAoBF,SAASE,QAAT,CAAkBC,SAAtC,GAAkDH,SAASI,WAAzE;AACA,UAAMC,MAAML,SAASM,MAAT,GAAkBN,SAASM,MAAT,CAAgBF,WAAlC,GAAgDJ,SAASG,SAArE;AACA,WAAOJ,KAAKQ,KAAL,CAAYN,KAAZ,EAAmBI,GAAnB,CAAP;AACA;AACD,SAAO,EAAP;AACA,CARD;;AAUA,eAAeR,iBAAf","file":"getElementContent.js","sourcesContent":["/**\n * Gets the content of an element (the part _between_ the opening and closing tag) from the HTML source code.\n *\n * @param {module:tree/structure.Node|module:tree/structure.FormattingElement} element The element to parse the contents of\n * @param {string} html                                                                The source code to parse the contents from\n *\n * @returns {string} The element's contents.\n *\n * @private\n */\nconst getElementContent = function( element, html ) {\n\tconst location = element.location;\n\tif ( location ) {\n\t\tconst start = location.startTag ? location.startTag.endOffset : location.startOffset;\n\t\tconst end = location.endTag ? location.endTag.startOffset : location.endOffset;\n\t\treturn html.slice( start, end );\n\t}\n\treturn \"\";\n};\n\nexport default getElementContent;\n"]}