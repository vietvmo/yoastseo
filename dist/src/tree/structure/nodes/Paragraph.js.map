{"version":3,"sources":["../../../../../src/tree/structure/nodes/Paragraph.js"],"names":["LeafNode","Paragraph","constructor","tag","isExplicit","length"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA;;;;;;;AAOA,MAAMC,SAAN,SAAwBD,QAAxB,CAAiC;AAChC;;;;;AAKAE,aAAaC,MAAM,EAAnB,EAAwB;AACvB,QAAO,WAAP;AACA;;;;AAIA,OAAKA,GAAL,GAAWA,GAAX;AACA;;AAED;;;;;AAKAC,cAAa;AACZ,SAAO,KAAKD,GAAL,IAAY,KAAKA,GAAL,CAASE,MAAT,GAAkB,CAArC;AACA;AAtB+B;;AAyBjC,eAAeJ,SAAf","file":"Paragraph.js","sourcesContent":["import LeafNode from \"./LeafNode\";\n\n/**\n * Represents a paragraph with text within a document.\n *\n * @extends module:tree/structure.LeafNode\n *\n * @memberOf module:tree/structure\n */\nclass Paragraph extends LeafNode {\n\t/**\n\t * A paragraph within a document.\n\t *\n\t * @param {string} [tag=\"\"] Optional tag to use for opening / closing this paragraph.\n\t */\n\tconstructor( tag = \"\" ) {\n\t\tsuper( \"Paragraph\" );\n\t\t/**\n\t\t * Tag used to open or close this paragraph.\n\t\t * @type {string}\n\t\t */\n\t\tthis.tag = tag;\n\t}\n\n\t/**\n\t * If this paragraph is an explicit paragraph (with an explicit tag).\n\t *\n\t * @returns {boolean} If this paragraph is explicit.\n\t */\n\tisExplicit() {\n\t\treturn this.tag && this.tag.length > 0;\n\t}\n}\n\nexport default Paragraph;\n"]}