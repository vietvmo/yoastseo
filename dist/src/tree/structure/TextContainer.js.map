{"version":3,"sources":["../../../../src/tree/structure/TextContainer.js"],"names":["TextContainer","constructor","text","formatting","appendText"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,MAAMA,aAAN,CAAoB;AACnB;;;AAGAC,gBAAc;AACb;;;;AAIA,SAAKC,IAAL,GAAY,EAAZ;AACA;;;;AAIA,SAAKC,UAAL,GAAkB,EAAlB;AACA;;AAED;;;;;;;AAOAC,aAAYF,IAAZ,EAAmB;AAClB,SAAKA,IAAL,IAAaA,IAAb;AACA;AA1BkB;;AA6BpB,eAAeF,aAAf","file":"TextContainer.js","sourcesContent":["/**\n * Represents a text (with optional formatting element(s)) within a document that can be read by a reader.\n *\n * Example (in the case of HTML):\n * ```html\n * This text is <strong id=\"elem-id\">very strong</strong>.\n * ```\n * is transformed to:\n * ```js\n * TextContainer {\n *     text: \"This text is very strong\".\n *     formatting: [\n *         FormattingElement {\n *             type: \"strong\",\n *             startIndex: 13, // \"This text is \".length\n *             endIndex: 54,   // \"This text is <strong id=\"elem-id\">very strong</strong>\".length\n *             startText: 13,  // \"This text is \".length\n *             endText: 24,    // \"This text is very strong\".length\n *             attributes: {\n *                 id: \"elem-id\"\n *             }\n *         }\n *     ]\n * }\n * ```\n *\n * @memberOf module:tree/structure\n */\nclass TextContainer {\n\t/**\n\t * Represents a text (with optional formatting element(s)) within a document that can be read by a reader.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Clean, analyzable text, without formatting.\n\t\t * @type {string}\n\t\t */\n\t\tthis.text = \"\";\n\t\t/**\n\t\t * This text's formatting (e.g. bold text, links, etc.).\n\t\t * @type {module:tree/structure.FormattingElement[]}\n\t\t */\n\t\tthis.formatting = [];\n\t}\n\n\t/**\n\t * Adds a text string to this container's text.\n\t *\n\t * @param {string} text The text to be added to the TextContainer.\n\t *\n\t * @returns {void}\n\t */\n\tappendText( text ) {\n\t\tthis.text += text;\n\t}\n}\n\nexport default TextContainer;\n"]}