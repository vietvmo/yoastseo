{"version":3,"sources":["../../src/researcher.js"],"names":["sentences","merge","InvalidTypeError","MissingArgument","isUndefined","isEmpty","wordCountInText","getLinkStatistics","linkCount","getLinks","urlLength","findKeywordInPageTitle","matchKeywordInSubheadings","getKeywordDensity","keywordCount","stopWordsInKeyword","stopWordsInUrl","calculateFleschReading","metaDescriptionLength","imageCount","altTagCount","keyphraseLength","metaDescriptionKeyword","keywordCountInUrl","findKeywordInFirstParagraph","pageTitleWidth","wordComplexity","getParagraphLength","countSentencesFromText","countSentencesFromDescription","getSubheadingTextLengths","findTransitionWords","passiveVoice","getSentenceBeginnings","relevantWords","readingTime","getTopicDensity","topicCount","keyphraseDistributionResearcher","keyphraseDistribution","research","morphology","functionWordsInKeyphrase","h1s","Researcher","paper","setPaper","defaultResearches","firstParagraph","_data","customResearches","prototype","addResearch","name","Function","hasResearch","Object","keys","getAvailableResearches","filter","length","getResearch","addResearchData","data","getData","hasOwnProperty"],"mappings":"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","file":"researcher.js","sourcesContent":["import sentences from \"./researches/sentences\";\n\nimport { merge } from \"lodash-es\";\nimport InvalidTypeError from \"./errors/invalidType\";\nimport MissingArgument from \"./errors/missingArgument\";\nimport { isUndefined } from \"lodash-es\";\nimport { isEmpty } from \"lodash-es\";\n\n// Researches\nimport wordCountInText from \"./researches/wordCountInText.js\";\n\nimport getLinkStatistics from \"./researches/getLinkStatistics.js\";\nimport linkCount from \"./researches/countLinks.js\";\nimport getLinks from \"./researches/getLinks.js\";\nimport urlLength from \"./researches/urlIsTooLong.js\";\nimport findKeywordInPageTitle from \"./researches/findKeywordInPageTitle.js\";\nimport matchKeywordInSubheadings from \"./researches/matchKeywordInSubheadings.js\";\nimport getKeywordDensity from \"./researches/getKeywordDensity.js\";\nimport keywordCount from \"./researches/keywordCount\";\nimport stopWordsInKeyword from \"./researches/stopWordsInKeyword\";\nimport stopWordsInUrl from \"./researches/stopWordsInUrl\";\nimport calculateFleschReading from \"./researches/calculateFleschReading.js\";\nimport metaDescriptionLength from \"./researches/metaDescriptionLength.js\";\nimport imageCount from \"./researches/imageCountInText.js\";\nimport altTagCount from \"./researches/imageAltTags.js\";\nimport keyphraseLength from \"./researches/keyphraseLength\";\nimport metaDescriptionKeyword from \"./researches/metaDescriptionKeyword.js\";\nimport keywordCountInUrl from \"./researches/keywordCountInUrl\";\nimport findKeywordInFirstParagraph from \"./researches/findKeywordInFirstParagraph.js\";\nimport pageTitleWidth from \"./researches/pageTitleWidth.js\";\nimport wordComplexity from \"./researches/getWordComplexity.js\";\nimport getParagraphLength from \"./researches/getParagraphLength.js\";\nimport countSentencesFromText from \"./researches/countSentencesFromText.js\";\nimport countSentencesFromDescription from \"./researches/countSentencesFromDescription.js\";\nimport getSubheadingTextLengths from \"./researches/getSubheadingTextLengths.js\";\nimport findTransitionWords from \"./researches/findTransitionWords.js\";\nimport passiveVoice from \"./researches/getPassiveVoice.js\";\nimport getSentenceBeginnings from \"./researches/getSentenceBeginnings.js\";\nimport relevantWords from \"./researches/relevantWords\";\nimport readingTime from \"./researches/readingTime\";\nimport getTopicDensity from \"./researches/getTopicDensity\";\nimport topicCount from \"./researches/topicCount\";\nimport { keyphraseDistributionResearcher } from \"./researches/keyphraseDistribution\";\nconst keyphraseDistribution = keyphraseDistributionResearcher;\nimport { research as morphology } from \"./researches/buildKeywordForms\";\nimport functionWordsInKeyphrase from \"./researches/functionWordsInKeyphrase\";\nimport h1s from \"./researches/h1s\";\n\n/**\n * This contains all possible, default researches.\n * @param {Paper} paper The Paper object that is needed within the researches.\n * @constructor\n * @throws {InvalidTypeError} Parameter needs to be an instance of the Paper object.\n */\nvar Researcher = function( paper ) {\n\tthis.setPaper( paper );\n\n\tthis.defaultResearches = {\n\t\turlLength: urlLength,\n\t\twordCountInText: wordCountInText,\n\t\tfindKeywordInPageTitle: findKeywordInPageTitle,\n\t\tcalculateFleschReading: calculateFleschReading,\n\t\tgetLinkStatistics: getLinkStatistics,\n\t\tgetLinks: getLinks,\n\t\tlinkCount: linkCount,\n\t\timageCount: imageCount,\n\t\taltTagCount: altTagCount,\n\t\tmatchKeywordInSubheadings: matchKeywordInSubheadings,\n\t\tkeywordCount: keywordCount,\n\t\tgetKeywordDensity: getKeywordDensity,\n\t\tstopWordsInKeyword: stopWordsInKeyword,\n\t\tstopWordsInUrl: stopWordsInUrl,\n\t\tmetaDescriptionLength: metaDescriptionLength,\n\t\tkeyphraseLength: keyphraseLength,\n\t\tkeywordCountInUrl: keywordCountInUrl,\n\t\tfirstParagraph: findKeywordInFirstParagraph,\n\t\tmetaDescriptionKeyword: metaDescriptionKeyword,\n\t\tpageTitleWidth: pageTitleWidth,\n\t\twordComplexity: wordComplexity,\n\t\tgetParagraphLength: getParagraphLength,\n\t\tcountSentencesFromText: countSentencesFromText,\n\t\tcountSentencesFromDescription: countSentencesFromDescription,\n\t\tgetSubheadingTextLengths: getSubheadingTextLengths,\n\t\tfindTransitionWords: findTransitionWords,\n\t\tpassiveVoice: passiveVoice,\n\t\tgetSentenceBeginnings: getSentenceBeginnings,\n\t\trelevantWords: relevantWords,\n\t\treadingTime: readingTime,\n\t\tgetTopicDensity: getTopicDensity,\n\t\ttopicCount: topicCount,\n\t\tsentences,\n\t\tkeyphraseDistribution: keyphraseDistribution,\n\t\tmorphology: morphology,\n\t\tfunctionWordsInKeyphrase: functionWordsInKeyphrase,\n\t\th1s: h1s,\n\t};\n\n\tthis._data = {};\n\n\tthis.customResearches = {};\n};\n\n/**\n * Set the Paper associated with the Researcher.\n * @param {Paper} paper The Paper to use within the Researcher\n * @throws {InvalidTypeError} Parameter needs to be an instance of the Paper object.\n * @returns {void}\n */\nResearcher.prototype.setPaper = function( paper ) {\n\tthis.paper = paper;\n};\n\n/**\n * Add a custom research that will be available within the Researcher.\n * @param {string} name A name to reference the research by.\n * @param {function} research The function to be added to the Researcher.\n * @throws {MissingArgument} Research name cannot be empty.\n * @throws {InvalidTypeError} The research requires a valid Function callback.\n * @returns {void}\n */\nResearcher.prototype.addResearch = function( name, research ) {\n\tif ( isUndefined( name ) || isEmpty( name ) ) {\n\t\tthrow new MissingArgument( \"Research name cannot be empty\" );\n\t}\n\n\tif ( ! ( research instanceof Function ) ) {\n\t\tthrow new InvalidTypeError( \"The research requires a Function callback.\" );\n\t}\n\n\tthis.customResearches[ name ] = research;\n};\n\n/**\n * Check whether or not the research is known by the Researcher.\n * @param {string} name The name to reference the research by.\n * @returns {boolean} Whether or not the research is known by the Researcher\n */\nResearcher.prototype.hasResearch = function( name ) {\n\treturn Object.keys( this.getAvailableResearches() ).filter(\n\t\tfunction( research ) {\n\t\t\treturn research === name;\n\t\t} ).length > 0;\n};\n\n/**\n * Return all available researches.\n * @returns {Object} An object containing all available researches.\n */\nResearcher.prototype.getAvailableResearches = function() {\n\treturn merge( this.defaultResearches, this.customResearches );\n};\n\n/**\n * Return the Research by name.\n * @param {string} name The name to reference the research by.\n *\n * @returns {*} Returns the result of the research or false if research does not exist.\n * @throws {MissingArgument} Research name cannot be empty.\n */\nResearcher.prototype.getResearch = function( name ) {\n\tif ( isUndefined( name ) || isEmpty( name ) ) {\n\t\tthrow new MissingArgument( \"Research name cannot be empty\" );\n\t}\n\n\tif ( ! this.hasResearch( name ) ) {\n\t\treturn false;\n\t}\n\n\treturn this.getAvailableResearches()[ name ]( this.paper, this );\n};\n\n/**\n * Add research data to the researcher by the research name.\n *\n * @param {string} research The identifier of the research.\n * @param {Object} data     The data object.\n *\n * @returns {void}.\n */\nResearcher.prototype.addResearchData = function( research, data ) {\n\tthis._data[ research ] = data;\n};\n\n/**\n * Return the research data from a research data provider by research name.\n *\n * @param {string} research The identifier of the research.\n *\n * @returns {*} The data provided by the provider, false if the data do not exist\n */\nResearcher.prototype.getData = function( research ) {\n\tif ( this._data.hasOwnProperty( research ) ) {\n\t\treturn this._data[ research ];\n\t}\n\n\treturn false;\n};\n\nexport default Researcher;\n"]}