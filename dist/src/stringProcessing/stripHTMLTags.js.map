{"version":3,"sources":["../../../src/stringProcessing/stripHTMLTags.js"],"names":["stripSpaces","blockElements","blockElementStartRegex","RegExp","join","blockElementEndRegex","stripIncompleteTags","text","replace","stripBlockTagsAtStartEnd","stripFullTags"],"mappings":"AAAA;;AAEA,OAAOA,WAAP,MAAwB,oCAAxB;;AAEA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,IAAIC,yBAAyB,IAAIC,MAAJ,CAAY,QAAQF,cAAcG,IAAd,CAAoB,GAApB,CAAR,GAAoC,UAAhD,EAA4D,GAA5D,CAA7B;AACA,IAAIC,uBAAuB,IAAIF,MAAJ,CAAY,QAAQF,cAAcG,IAAd,CAAoB,GAApB,CAAR,GAAoC,WAAhD,EAA6D,GAA7D,CAA3B;;AAEA;;;;;;AAMA,IAAIE,sBAAsB,UAAUC,IAAV,EAAiB;AAC1CA,SAAOA,KAAKC,OAAL,CAAc,kBAAd,EAAkC,EAAlC,CAAP;AACAD,SAAOA,KAAKC,OAAL,CAAc,iBAAd,EAAiC,EAAjC,CAAP;AACA,SAAOD,IAAP;AACA,CAJD;;AAMA;;;;;;AAMA,IAAIE,2BAA2B,UAAUF,IAAV,EAAiB;AAC/CA,SAAOA,KAAKC,OAAL,CAAcN,sBAAd,EAAsC,EAAtC,CAAP;AACAK,SAAOA,KAAKC,OAAL,CAAcH,oBAAd,EAAoC,EAApC,CAAP;AACA,SAAOE,IAAP;AACA,CAJD;;AAMA;;;;;;AAMA,IAAIG,gBAAgB,UAAUH,IAAV,EAAiB;AACpCA,SAAOA,KAAKC,OAAL,CAAc,eAAd,EAA+B,GAA/B,CAAP;AACAD,SAAOP,YAAaO,IAAb,CAAP;AACA,SAAOA,IAAP;AACA,CAJD;;AAMA,SACCG,aADD,EAECJ,mBAFD,EAGCG,wBAHD;;AAMA,eAAe;AACdC,iBAAeA,aADD;AAEdJ,uBAAqBA,mBAFP;AAGdG,4BAA0BA;AAHZ,CAAf","file":"stripHTMLTags.js","sourcesContent":["/** @module stringProcessing/stripHTMLTags */\n\nimport stripSpaces from \"../stringProcessing/stripSpaces.js\";\n\nimport { blockElements } from \"../helpers/html.js\";\n\nvar blockElementStartRegex = new RegExp( \"^<(\" + blockElements.join( \"|\" ) + \")[^>]*?>\", \"i\" );\nvar blockElementEndRegex = new RegExp( \"</(\" + blockElements.join( \"|\" ) + \")[^>]*?>$\", \"i\" );\n\n/**\n * Strip incomplete tags within a text. Strips an endtag at the beginning of a string and the start tag at the end of a\n * start of a string.\n * @param {String} text The text to strip the HTML-tags from at the begin and end.\n * @returns {String} The text without HTML-tags at the begin and end.\n */\nvar stripIncompleteTags = function( text ) {\n\ttext = text.replace( /^(<\\/([^>]+)>)+/i, \"\" );\n\ttext = text.replace( /(<([^/>]+)>)+$/i, \"\" );\n\treturn text;\n};\n\n/**\n * Removes the block element tags at the beginning and end of a string and returns this string.\n *\n * @param {string} text The unformatted string.\n * @returns {string} The text with removed HTML begin and end block elements\n */\nvar stripBlockTagsAtStartEnd = function( text ) {\n\ttext = text.replace( blockElementStartRegex, \"\" );\n\ttext = text.replace( blockElementEndRegex, \"\" );\n\treturn text;\n};\n\n/**\n * Strip HTML-tags from text\n *\n * @param {String} text The text to strip the HTML-tags from.\n * @returns {String} The text without HTML-tags.\n */\nvar stripFullTags = function( text ) {\n\ttext = text.replace( /(<([^>]+)>)/ig, \" \" );\n\ttext = stripSpaces( text );\n\treturn text;\n};\n\nexport {\n\tstripFullTags,\n\tstripIncompleteTags,\n\tstripBlockTagsAtStartEnd,\n};\n\nexport default {\n\tstripFullTags: stripFullTags,\n\tstripIncompleteTags: stripIncompleteTags,\n\tstripBlockTagsAtStartEnd: stripBlockTagsAtStartEnd,\n};\n"]}