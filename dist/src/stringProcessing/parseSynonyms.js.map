{"version":3,"sources":["../../../src/stringProcessing/parseSynonyms.js"],"names":["stripSpaces","removePunctuationExceptQuotes","synonyms","synonymsSplit","split","map","synonym","filter"],"mappings":"AAAA;;AAEA,OAAOA,WAAP,MAAwB,oCAAxB;AACA,OAAOC,6BAAP,MAA0C,sDAA1C;;AAEA;;;;;;;AAOA,eAAe,UAAUC,QAAV,EAAqB;AACnC,KAAIC,gBAAgBD,SAASE,KAAT,CAAgB,GAAhB,CAApB;;AAEAD,iBAAgBA,cAAcE,GAAd,CAAmB,UAAUC,OAAV,EAAoB;AACtD,SAAOL,8BAA+BD,YAAaM,OAAb,CAA/B,CAAP;AACA,EAFe,EAEZC,MAFY,CAEJ,UAAUD,OAAV,EAAoB;AAC/B,SAAOA,OAAP;AACA,EAJe,CAAhB;AAKA,QAAOH,aAAP;AACA","file":"parseSynonyms.js","sourcesContent":["/** @module stringProcessing/parseSynonyms */\n\nimport stripSpaces from \"../stringProcessing/stripSpaces.js\";\nimport removePunctuationExceptQuotes from \"../stringProcessing/removePunctuationExceptQuotes.js\";\n\n/**\n * Parses synonyms from a comma-separated string into an array.\n *\n * @param {String} synonyms The text to match\n *\n * @returns {Array} An array with all synonyms.\n */\nexport default function( synonyms ) {\n\tlet synonymsSplit = synonyms.split( \",\" );\n\n\tsynonymsSplit = synonymsSplit.map( function( synonym ) {\n\t\treturn removePunctuationExceptQuotes( stripSpaces( synonym ) );\n\t} ).filter( function( synonym ) {\n\t\treturn synonym;\n\t} );\n\treturn synonymsSplit;\n}\n"]}