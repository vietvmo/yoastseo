{"version":3,"sources":["../../../src/stringProcessing/transliterate.js"],"names":["transliterationsMap","text","locale","map","i","length","replace","letter","alternative"],"mappings":"AAAA;;AAEA,OAAOA,mBAAP,MAAgC,+BAAhC;;AAEA;;;;;;;AAOA,eAAe,UAAUC,IAAV,EAAgBC,MAAhB,EAAyB;AACvC,KAAIC,MAAMH,oBAAqBE,MAArB,CAAV;AACA,MAAM,IAAIE,IAAI,CAAd,EAAiBA,IAAID,IAAIE,MAAzB,EAAiCD,GAAjC,EAAuC;AACtCH,SAAOA,KAAKK,OAAL,CACNH,IAAKC,CAAL,EAASG,MADH,EAENJ,IAAKC,CAAL,EAASI,WAFH,CAAP;AAIA;AACD,QAAOP,IAAP;AACA","file":"transliterate.js","sourcesContent":["/** @module stringProcessing/replaceDiacritics */\n\nimport transliterationsMap from \"../config/transliterations.js\";\n\n/**\n * Replaces all special characters from the text based on the transliterations map.\n *\n * @param {string} text The text to remove special characters from.\n * @param {string} locale The locale.\n * @returns {string} The text with all special characters replaced.\n */\nexport default function( text, locale ) {\n\tvar map = transliterationsMap( locale );\n\tfor ( var i = 0; i < map.length; i++ ) {\n\t\ttext = text.replace(\n\t\t\tmap[ i ].letter,\n\t\t\tmap[ i ].alternative\n\t\t);\n\t}\n\treturn text;\n}\n"]}