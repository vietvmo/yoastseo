{"version":3,"sources":["../../../src/stringProcessing/getWords.js"],"names":["stripFullTags","stripTags","stripSpaces","removePunctuation","map","filter","text","words","split","word","trim"],"mappings":"AAAA;;AAEA,SAASA,iBAAiBC,SAA1B,QAA2C,oBAA3C;;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA;;;;;;AAMA,eAAe,UAAUC,IAAV,EAAiB;AAC/BA,QAAOJ,YAAaD,UAAWK,IAAX,CAAb,CAAP;AACA,KAAKA,SAAS,EAAd,EAAmB;AAClB,SAAO,EAAP;AACA;;AAED,KAAIC,QAAQD,KAAKE,KAAL,CAAY,KAAZ,CAAZ;;AAEAD,SAAQH,IAAKG,KAAL,EAAY,UAAUE,IAAV,EAAiB;AACpC,SAAON,kBAAmBM,IAAnB,CAAP;AACA,EAFO,CAAR;;AAIA,QAAOJ,OAAQE,KAAR,EAAe,UAAUE,IAAV,EAAiB;AACtC,SAAOA,KAAKC,IAAL,OAAgB,EAAvB;AACA,EAFM,CAAP;AAGA","file":"getWords.js","sourcesContent":["/** @module stringProcessing/countWords */\n\nimport { stripFullTags as stripTags } from \"./stripHTMLTags.js\";\n\nimport stripSpaces from \"./stripSpaces.js\";\nimport removePunctuation from \"./removePunctuation.js\";\nimport { map } from \"lodash-es\";\nimport { filter } from \"lodash-es\";\n\n/**\n * Returns an array with words used in the text.\n *\n * @param {string} text The text to be counted.\n * @returns {Array} The array with all words.\n */\nexport default function( text ) {\n\ttext = stripSpaces( stripTags( text ) );\n\tif ( text === \"\" ) {\n\t\treturn [];\n\t}\n\n\tvar words = text.split( /\\s/g );\n\n\twords = map( words, function( word ) {\n\t\treturn removePunctuation( word );\n\t} );\n\n\treturn filter( words, function( word ) {\n\t\treturn word.trim() !== \"\";\n\t} );\n}\n\n"]}