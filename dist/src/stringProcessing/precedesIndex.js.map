{"version":3,"sources":["../../../src/stringProcessing/precedesIndex.js"],"names":["isEmpty","forEach","precedingWords","participleIndex","precedingWordsIndices","precedingWord","precedingWordsIndex","index","push","matches","length"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA;;;;;;;;AAQA,eAAe,UAAUC,cAAV,EAA0BC,eAA1B,EAA4C;AAC1D,KAAKH,QAASE,cAAT,CAAL,EAAiC;AAChC,SAAO,KAAP;AACA;;AAED,KAAIE,wBAAwB,EAA5B;AACAH,SAASC,cAAT,EAAyB,UAAUG,aAAV,EAA0B;AAClD,MAAIC,sBAAsBD,cAAcE,KAAxC;AACAH,wBAAsBI,IAAtB,CAA4BF,mBAA5B;AACA,EAHD;;AAKA,KAAIG,UAAU,EAAd;AACAR,SAASG,qBAAT,EAAgC,UAAUE,mBAAV,EAAgC;AAC/D;AACA,MAAKA,sBAAsB,CAAtB,GAA0BH,eAA/B,EAAiD;AAChDM,WAAQD,IAAR,CAAcF,mBAAd;AACA;AACD,EALD;;AAOA,KAAKG,QAAQC,MAAR,GAAiB,CAAtB,EAA0B;AACzB,SAAO,IAAP;AACA;AACD,QAAO,KAAP;AACA","file":"precedesIndex.js","sourcesContent":["import { isEmpty } from \"lodash-es\";\nimport { forEach } from \"lodash-es\";\n\n/**\n * Checks whether a given word precedes a participle directly or indirectly.\n *\n * @param {Array} precedingWords The array of objects with matches and indices.\n * @param {number} participleIndex The index of the participle.\n *\n * @returns {boolean} Returns true if the participle is preceded by a given word, otherwise returns false.\n */\nexport default function( precedingWords, participleIndex ) {\n\tif ( isEmpty( precedingWords ) ) {\n\t\treturn false;\n\t}\n\n\tvar precedingWordsIndices = [];\n\tforEach( precedingWords, function( precedingWord ) {\n\t\tvar precedingWordsIndex = precedingWord.index;\n\t\tprecedingWordsIndices.push( precedingWordsIndex );\n\t} );\n\n\tvar matches = [];\n\tforEach( precedingWordsIndices, function( precedingWordsIndex ) {\n\t\t// + 1 because the beginning word boundary is not included in the passive participle match\n\t\tif ( precedingWordsIndex + 1 < participleIndex ) {\n\t\t\tmatches.push( precedingWordsIndex );\n\t\t}\n\t} );\n\n\tif ( matches.length > 0 ) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n"]}